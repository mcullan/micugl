export declare const rippleVertexShader = "\n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  void main() {\n    gl_Position = vec4(a_position, 0.0, 1.0);\n    v_texCoord = a_position * 0.5 + 0.5;\n  }\n";
export declare const rippleSimulationShader = "\n  precision highp float;\n  \n  uniform vec2 u_resolution;\n  uniform float u_time;\n  uniform sampler2D u_texture0;\n  uniform vec2 u_mouse;\n  uniform float u_mouseForce;\n  uniform float u_damping;\n  \n  varying vec2 v_texCoord;\n  \n  void main() {\n    vec2 uv = v_texCoord;\n    vec2 texelSize = 1.0 / u_resolution;\n    \n    vec4 state = texture2D(u_texture0, uv);\n    float height = state.r;\n    float velocity = state.g;\n    \n    float north = texture2D(u_texture0, uv + vec2(0.0, texelSize.y)).r;\n    float south = texture2D(u_texture0, uv - vec2(0.0, texelSize.y)).r;\n    float east = texture2D(u_texture0, uv + vec2(texelSize.x, 0.0)).r;\n    float west = texture2D(u_texture0, uv - vec2(texelSize.x, 0.0)).r;\n    \n    float newVelocity = velocity + ((north + south + east + west) / 4.0 - height) * 2.0;\n    newVelocity *= u_damping;\n    \n    float newHeight = height + newVelocity;\n    \n    vec2 mouseVec = u_mouse - uv;\n    float mouseDistance = length(mouseVec);\n    if (mouseDistance < 0.05 && u_mouseForce > 0.0) {\n        newHeight += 0.5;\n    }\n    \n    float startTime = mod(u_time * 0.001, 10.0);\n    if (startTime < 0.2) {\n        vec2 center = vec2(0.5, 0.5);\n        float centerDist = length(uv - center);\n        if (centerDist < 0.05) {\n            newHeight += 0.5 * (1.0 - startTime * 5.0);\n        }\n    }\n    \n    gl_FragColor = vec4(newHeight, newVelocity, 0.0, 1.0);\n  }\n";
export declare const rippleRenderShader = "\n  precision highp float;\n  \n  uniform vec2 u_resolution;\n  uniform float u_time;\n  uniform sampler2D u_texture0;\n  uniform vec3 u_color1;\n  uniform vec3 u_color2;\n  \n  varying vec2 v_texCoord;\n  \n  void main() {\n    vec2 uv = v_texCoord;\n    \n    vec4 state = texture2D(u_texture0, uv);\n    float height = state.r;\n    \n    vec3 color = mix(u_color1, u_color2, (height + 1.0) * 0.5);\n    \n    float t = u_time * 0.001;\n    float brightness = 1.0 + 0.1 * sin(uv.x * 10.0 + t) * sin(uv.y * 10.0 + t);\n    color *= brightness;\n    \n    gl_FragColor = vec4(color, 1.0);\n  }\n";

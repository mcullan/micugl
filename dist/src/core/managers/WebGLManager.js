"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const d=require("./FBOManager.js");class m{constructor(t,n){this.resources=new Map,this.compileCache=new Map,this.uniformUpdateFns=new Map,this.extensions=new Map;const r={alpha:!1,depth:!1,stencil:!1,antialias:!1,powerPreference:"low-power",preserveDrawingBuffer:!1},e=t.getContext("webgl",{...r,...n});if(!e)throw new Error("WebGL not supported");this.gl=e,this.fboManager=new d.FBOManager(e),this.getExtension("OES_texture_float"),this.getExtension("OES_texture_float_linear"),this.getExtension("OES_vertex_array_object"),this.getExtension("ANGLE_instanced_arrays")}getExtension(t){if(this.extensions.has(t))return this.extensions.get(t);const n=this.gl.getExtension(t);return this.extensions.set(t,n),n}createProgram(t,n){const{vertexShader:r,fragmentShader:e,uniforms:o,attributes:i}=n,s=this.gl,h=this.getOrCompileShader("vertex:"+r,s.VERTEX_SHADER,r),l=this.getOrCompileShader("fragment:"+e,s.FRAGMENT_SHADER,e),f=s.createProgram();if(!f)throw new Error("Failed to create WebGL program");if(s.attachShader(f,h),s.attachShader(f,l),s.linkProgram(f),!s.getProgramParameter(f,s.LINK_STATUS)){const g=s.getProgramInfoLog(f);throw s.deleteProgram(f),new Error(`Could not link shader program: ${g}`)}const c={};for(const g of o)c[g.name]=s.getUniformLocation(f,g.name);const u={};if(i)for(const g of i)u[g.name]=s.getAttribLocation(f,g.name);const a={program:f,uniforms:c,attributes:u,buffers:{}};return this.resources.set(t,a),this.uniformUpdateFns.set(t,new Map),a}getOrCompileShader(t,n,r){if(this.compileCache.has(t)){const o=this.compileCache.get(t);if(o)return o}const e=this.compileShader(n,r);return this.compileCache.set(t,e),e}compileShader(t,n){const r=this.gl,e=r.createShader(t);if(!e)throw new Error("Failed to create shader");if(r.shaderSource(e,n),r.compileShader(e),!r.getShaderParameter(e,r.COMPILE_STATUS)){const o=r.getShaderInfoLog(e);throw r.deleteShader(e),new Error(`Shader compilation failed: ${o}`)}return e}createBuffer(t,n,r){const e=this.gl,o=this.resources.get(t);if(!o)throw new Error(`Program with id ${t} not found`);const i=e.createBuffer();if(!i)throw new Error("Failed to create buffer");return e.bindBuffer(e.ARRAY_BUFFER,i),e.bufferData(e.ARRAY_BUFFER,r,e.STATIC_DRAW),o.buffers[n]={buffer:i,data:r},i}updateBuffer(t,n,r){const e=this.gl,o=this.resources.get(t);if(!o)throw new Error(`Program with id ${t} not found`);const i=o.buffers[n];if(!i)throw new Error(`Buffer for attribute ${n} not found`);e.bindBuffer(e.ARRAY_BUFFER,i.buffer),e.bufferData(e.ARRAY_BUFFER,r,e.STATIC_DRAW),i.data=r}registerUniformUpdater(t,n,r,e){const o=this.resources.get(t);if(!o)throw new Error(`Program with id ${t} not found`);const i=this.uniformUpdateFns.get(t);if(!i)throw new Error(`Program uniforms for id ${t} not found`);const s=o.uniforms[n];if(s===null)return;const h=this.gl;let l;switch(r){case"int":l=(f,c,u)=>{const a=e(f,c,u);return h.uniform1i(s,a),a};break;case"float":l=(f,c,u)=>{const a=e(f,c,u);return h.uniform1f(s,a),a};break;case"sampler2D":l=(f,c,u)=>{const a=e(f,c,u);return h.uniform1i(s,a),a};break;case"vec2":l=(f,c,u)=>{const a=e(f,c,u);return h.uniform2fv(s,a),a};break;case"vec3":l=(f,c,u)=>{const a=e(f,c,u);return h.uniform3fv(s,a),a};break;case"vec4":l=(f,c,u)=>{const a=e(f,c,u);return h.uniform4fv(s,a),a};break;case"mat2":l=(f,c,u)=>{const a=e(f,c,u);return h.uniformMatrix2fv(s,!1,a),a};break;case"mat3":l=(f,c,u)=>{const a=e(f,c,u);return h.uniformMatrix3fv(s,!1,a),a};break;case"mat4":l=(f,c,u)=>{const a=e(f,c,u);return h.uniformMatrix4fv(s,!1,a),a};break;default:throw new Error(`Unsupported uniform type: ${r}`)}i.set(n,l)}updateUniforms(t,n){const r=this.uniformUpdateFns.get(t);if(!r)return;const e=this.gl.canvas,o=e.width,i=e.height;r.forEach(s=>{s(n,o,i)})}setSize(t,n,r=!0){const e=this.gl.canvas,o=r&&window.devicePixelRatio||1,i=Math.floor(t*o),s=Math.floor(n*o);(e.width!==i||e.height!==s)&&(e.width=i,e.height=s,e.style.width=`${t}px`,e.style.height=`${n}px`,this.gl.viewport(0,0,i,s))}prepareRender(t,n={}){const{clear:r=!0,clearColor:e=[0,0,0,1]}=n,o=this.gl,i=this.resources.get(t);if(!i)throw new Error(`Program with id ${t} not found`);o.useProgram(i.program),r&&(o.clearColor(...e),o.clear(o.COLOR_BUFFER_BIT))}fastRender(t,n,r=!0){const e=this.gl,o=this.resources.get(t);if(!o)throw new Error(`Program with id ${t} not found`);e.useProgram(o.program),r&&e.clear(e.COLOR_BUFFER_BIT),this.updateUniforms(t,n)}setUniform(t,n,r,e){const o=this.gl,i=this.resources.get(t);if(!i)throw new Error(`Program with id ${t} not found`);const s=i.uniforms[n];if(s!==null)switch(o.useProgram(i.program),e){case"float":o.uniform1f(s,r);break;case"vec2":o.uniform2fv(s,r);break;case"vec3":o.uniform3fv(s,r);break;case"vec4":o.uniform4fv(s,r);break;case"int":o.uniform1i(s,r);break;case"mat2":o.uniformMatrix2fv(s,!1,r);break;case"mat3":o.uniformMatrix3fv(s,!1,r);break;case"mat4":o.uniformMatrix4fv(s,!1,r);break;case"sampler2D":o.uniform1i(s,r);break;default:throw new Error(`Unsupported uniform type: ${e}`)}}setAttributeOnce(t,n,r){const e=this.gl,o=this.resources.get(t);if(!o)throw new Error(`Program with id ${t} not found`);const i=o.attributes[n];if(i===-1){console.warn(`Attribute ${n} not found or is unused`);return}const s=o.buffers[n];if(!s)throw new Error(`Buffer for attribute ${n} not found`);if(e.bindBuffer(e.ARRAY_BUFFER,s.buffer),e.enableVertexAttribArray(i),e.vertexAttribPointer(i,r.size,e[r.type],r.normalized,r.stride,r.offset),r.instanced){const h=this.getExtension("ANGLE_instanced_arrays");if(h!=null&&h.vertexAttribDivisorANGLE)h.vertexAttribDivisorANGLE(i,1);else if(e.vertexAttribDivisor)e.vertexAttribDivisor(i,1);else throw new Error("Instanced rendering not supported")}}drawArrays(t,n,r){this.gl.drawArrays(t,n,r)}drawElements(t,n,r,e){this.gl.drawElements(t,n,r,e)}destroy(t){const n=this.gl,r=this.resources.get(t);r&&(Object.values(r.buffers).forEach(({buffer:e})=>{n.deleteBuffer(e)}),n.deleteProgram(r.program),this.resources.delete(t),this.uniformUpdateFns.delete(t))}destroyAll(){for(const t of Array.from(this.resources.keys()))this.destroy(t);this.compileCache.clear(),this.fboManager.destroyAll()}get context(){return this.gl}get fbo(){return this.fboManager}}exports.WebGLManager=m;
